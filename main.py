import locale
import threading

from telebot import types
from calculator import (
    calculate_cost,
    get_currency_rates,
    show_country_selection,
    get_nbk_currency_rates,
    get_nbkr_currency_rates,
    calculate_cost_manual,
)
from config import bot


# –ü–µ—Ä–µ–º–µ–Ω–Ω—ã–µ
user_data = {}
current_country = "Russia"
current_car_type = "sedan"

# Set locale for number formatting
locale.setlocale(locale.LC_ALL, "en_US.UTF-8")


# –û–±—Ä–∞–±–æ—Ç—á–∏–∫ callback
@bot.callback_query_handler(func=lambda call: True)
def handle_callback_query(call):
    global current_car_type, current_country

    user_id = call.message.chat.id

    if call.data == "calculate_another":
        # –°–±—Ä–∞—Å—ã–≤–∞–µ–º –¥–∞–Ω–Ω—ã–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
        user_data[user_id] = {}
        current_country = None
        current_car_type = None

        show_country_selection(user_id)
    elif call.data in ["sedan", "crossover"]:
        handle_car_type_selection(call)

    elif call.data == "main_menu":
        main_menu(call.message)


# –§—É–Ω–∫—Ü–∏—è –¥–ª—è —É—Å—Ç–∞–Ω–æ–≤–∫–∏ –∫–æ–º–∞–Ω–¥ –º–µ–Ω—é
def set_bot_commands():
    commands = [
        types.BotCommand("start", "–ó–∞–ø—É—Å—Ç–∏—Ç—å –±–æ—Ç–∞"),
        types.BotCommand("cbr", "–ö—É—Ä—Å –¶–ë –†–æ—Å—Å–∏–π—Å–∫–æ–π –§–µ–¥–µ—Ä–∞—Ü–∏–∏"),
        types.BotCommand("nbk", "–ö—É—Ä—Å –ù–∞—Ü–∏–æ–Ω–∞–ª—å–Ω–æ–≥–æ –ë–∞–Ω–∫–∞ –†–µ—Å–ø—É–±–ª–∏–∫–∏ –ö–∞–∑–∞—Ö—Å—Ç–∞–Ω"),
        types.BotCommand("nbkr", "–ö—É—Ä—Å –ù–∞—Ü–∏–æ–Ω–∞–ª—å–Ω–æ–≥–æ –ë–∞–Ω–∫–∞ –†–µ—Å–ø—É–±–ª–∏–∫–∏ –ö—ã—Ä–≥—ã–∑—Å—Ç–∞–Ω"),
    ]
    bot.set_my_commands(commands)


@bot.message_handler(commands=["nbkr"])
def nbkr_command(message):
    try:
        rates_text = get_nbkr_currency_rates()

        # –°–æ–∑–¥–∞–µ–º –∫–ª–∞–≤–∏–∞—Ç—É—Ä—É —Å –∫–Ω–æ–ø–∫–æ–π –¥–ª—è —Ä–∞—Å—á–µ—Ç–∞ –∞–≤—Ç–æ–º–æ–±–∏–ª—è
        keyboard = types.InlineKeyboardMarkup()
        keyboard.add(
            types.InlineKeyboardButton(
                "üîç –†–∞—Å—Å—á–∏—Ç–∞—Ç—å —Å—Ç–æ–∏–º–æ—Å—Ç—å –∞–≤—Ç–æ–º–æ–±–∏–ª—è", callback_data="calculate_another"
            )
        )

        # –û—Ç–ø—Ä–∞–≤–ª—è–µ–º —Å–æ–æ–±—â–µ–Ω–∏–µ —Å –∫—É—Ä—Å–∞–º–∏ –∏ –∫–ª–∞–≤–∏–∞—Ç—É—Ä–æ–π
        bot.send_message(message.chat.id, rates_text, reply_markup=keyboard)
    except Exception as e:
        bot.send_message(
            message.chat.id, "–ù–µ —É–¥–∞–ª–æ—Å—å –ø–æ–ª—É—á–∏—Ç—å –∫—É—Ä—Å—ã –≤–∞–ª—é—Ç. –ü–æ–ø—Ä–æ–±—É–π—Ç–µ –ø–æ–∑–∂–µ."
        )
        print(f"–û—à–∏–±–∫–∞ –ø—Ä–∏ –ø–æ–ª—É—á–µ–Ω–∏–∏ –∫—É—Ä—Å–æ–≤ –≤–∞–ª—é—Ç: {e}")


@bot.message_handler(commands=["nbk"])
def nbk_command(message):
    try:
        rates_text = get_nbk_currency_rates()

        # –°–æ–∑–¥–∞–µ–º –∫–ª–∞–≤–∏–∞—Ç—É—Ä—É —Å –∫–Ω–æ–ø–∫–æ–π –¥–ª—è —Ä–∞—Å—á–µ—Ç–∞ –∞–≤—Ç–æ–º–æ–±–∏–ª—è
        keyboard = types.InlineKeyboardMarkup()
        keyboard.add(
            types.InlineKeyboardButton(
                "üîç –†–∞—Å—Å—á–∏—Ç–∞—Ç—å —Å—Ç–æ–∏–º–æ—Å—Ç—å –∞–≤—Ç–æ–º–æ–±–∏–ª—è", callback_data="calculate_another"
            )
        )

        # –û—Ç–ø—Ä–∞–≤–ª—è–µ–º —Å–æ–æ–±—â–µ–Ω–∏–µ —Å –∫—É—Ä—Å–∞–º–∏ –∏ –∫–ª–∞–≤–∏–∞—Ç—É—Ä–æ–π
        bot.send_message(message.chat.id, rates_text, reply_markup=keyboard)
    except Exception as e:
        bot.send_message(
            message.chat.id, "–ù–µ —É–¥–∞–ª–æ—Å—å –ø–æ–ª—É—á–∏—Ç—å –∫—É—Ä—Å—ã –≤–∞–ª—é—Ç. –ü–æ–ø—Ä–æ–±—É–π—Ç–µ –ø–æ–∑–∂–µ."
        )
        print(f"–û—à–∏–±–∫–∞ –ø—Ä–∏ –ø–æ–ª—É—á–µ–Ω–∏–∏ –∫—É—Ä—Å–æ–≤ –≤–∞–ª—é—Ç: {e}")


@bot.message_handler(commands=["cbr"])
def cbr_command(message):
    try:
        rates_text = get_currency_rates()

        # –°–æ–∑–¥–∞–µ–º –∫–ª–∞–≤–∏–∞—Ç—É—Ä—É —Å –∫–Ω–æ–ø–∫–æ–π –¥–ª—è —Ä–∞—Å—á–µ—Ç–∞ –∞–≤—Ç–æ–º–æ–±–∏–ª—è
        keyboard = types.InlineKeyboardMarkup()
        keyboard.add(
            types.InlineKeyboardButton(
                "üîç –†–∞—Å—Å—á–∏—Ç–∞—Ç—å —Å—Ç–æ–∏–º–æ—Å—Ç—å –∞–≤—Ç–æ–º–æ–±–∏–ª—è", callback_data="calculate_another"
            )
        )

        # –û—Ç–ø—Ä–∞–≤–ª—è–µ–º —Å–æ–æ–±—â–µ–Ω–∏–µ —Å –∫—É—Ä—Å–∞–º–∏ –∏ –∫–ª–∞–≤–∏–∞—Ç—É—Ä–æ–π
        bot.send_message(message.chat.id, rates_text, reply_markup=keyboard)
    except Exception as e:
        bot.send_message(
            message.chat.id, "–ù–µ —É–¥–∞–ª–æ—Å—å –ø–æ–ª—É—á–∏—Ç—å –∫—É—Ä—Å—ã –≤–∞–ª—é—Ç. –ü–æ–ø—Ä–æ–±—É–π—Ç–µ –ø–æ–∑–∂–µ."
        )
        print(f"–û—à–∏–±–∫–∞ –ø—Ä–∏ –ø–æ–ª—É—á–µ–Ω–∏–∏ –∫—É—Ä—Å–æ–≤ –≤–∞–ª—é—Ç: {e}")


# –°–∞–º—ã–π —Å—Ç–∞—Ä—Ç
@bot.message_handler(commands=["start"])
def start(message):
    user_name = message.from_user.first_name

    # –ü—Ä–∏–≤–µ—Ç—Å—Ç–≤–µ–Ω–Ω–æ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ
    greeting = f"üëã –ó–¥—Ä–∞–≤—Å—Ç–≤—É–π—Ç–µ, {user_name}!\n –Ø –±–æ—Ç –∫–æ–º–ø–∞–Ω–∏–∏ Kims Auto Trade –¥–ª—è —Ä–∞—Å—á—ë—Ç–∞ —Å—Ç–æ–∏–º–æ—Å—Ç–∏ –∞–≤—Ç–æ –∏–∑ –Æ–∂–Ω–æ–π –ö–æ—Ä–µ–∏ –¥–æ —Å—Ç—Ä–∞–Ω –°–ù–ì! üöó \n\nüí∞ –ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –≤—ã–±–µ—Ä–∏—Ç–µ –¥–µ–π—Å—Ç–≤–∏–µ –∏–∑ –º–µ–Ω—é –Ω–∏–∂–µ:"

    # –°–æ–∑–¥–∞–Ω–∏–µ –∫–Ω–æ–ø–æ—á–Ω–æ–≥–æ –º–µ–Ω—é
    markup = types.ReplyKeyboardMarkup(resize_keyboard=True)
    btn_calc = types.KeyboardButton("–†–∞—Å—á—ë—Ç")
    btn_instagram = types.KeyboardButton("Instagram")
    btn_whatsapp = types.KeyboardButton("WhatsApp")
    btn_telegram = types.KeyboardButton("Telegram-–∫–∞–Ω–∞–ª")
    btn_manager = types.KeyboardButton("–ö–æ–Ω—Ç–∞–∫—Ç—ã")

    # –î–æ–±–∞–≤–ª–µ–Ω–∏–µ –∫–Ω–æ–ø–æ–∫ –≤ –º–µ–Ω—é
    markup.add(btn_calc, btn_instagram, btn_whatsapp, btn_telegram, btn_manager)

    # –û—Ç–ø—Ä–∞–≤–∫–∞ –ø—Ä–∏–≤–µ—Ç—Å—Ç–≤–∏—è —Å –∫–Ω–æ–ø–æ—á–Ω—ã–º –º–µ–Ω—é
    bot.send_message(message.chat.id, greeting, reply_markup=markup)


# –ì–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é
@bot.message_handler(func=lambda message: message.text == "–í–µ—Ä–Ω—É—Ç—å—Å—è –≤ –≥–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é")
def main_menu(message):
    user_id = message.chat.id

    user_data[user_id] = {}

    # –ü—Ä–∏–≤–µ—Ç—Å—Ç–≤–µ–Ω–Ω–æ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ
    user_name = message.from_user.first_name
    greeting = f"–ó–¥—Ä–∞–≤—Å—Ç–≤—É–π—Ç–µ, {user_name}!\n –Ø –±–æ—Ç –∫–æ–º–ø–∞–Ω–∏–∏ Kims Auto Trade –¥–ª—è —Ä–∞—Å—á—ë—Ç–∞ —Å—Ç–æ–∏–º–æ—Å—Ç–∏ –∞–≤—Ç–æ –∏–∑ –Æ–∂–Ω–æ–π –ö–æ—Ä–µ–∏ –¥–æ —Å—Ç—Ä–∞–Ω –°–ù–ì! üöó \n\nüí∞ –ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –≤—ã–±–µ—Ä–∏—Ç–µ –¥–µ–π—Å—Ç–≤–∏–µ –∏–∑ –º–µ–Ω—é –Ω–∏–∂–µ:"

    # –°–æ–∑–¥–∞–Ω–∏–µ –∫–Ω–æ–ø–æ—á–Ω–æ–≥–æ –º–µ–Ω—é
    markup = types.ReplyKeyboardMarkup(resize_keyboard=True)
    btn_calc = types.KeyboardButton("–†–∞—Å—á—ë—Ç")
    btn_instagram = types.KeyboardButton("Instagram")
    btn_whatsapp = types.KeyboardButton("WhatsApp")
    btn_telegram = types.KeyboardButton("Telegram-–∫–∞–Ω–∞–ª")
    btn_manager = types.KeyboardButton("–ö–æ–Ω—Ç–∞–∫—Ç—ã")

    # –î–æ–±–∞–≤–ª–µ–Ω–∏–µ –∫–Ω–æ–ø–æ–∫ –≤ –º–µ–Ω—é
    markup.add(btn_calc, btn_instagram, btn_whatsapp, btn_telegram, btn_manager)

    # –û—Ç–ø—Ä–∞–≤–∫–∞ –ø—Ä–∏–≤–µ—Ç—Å—Ç–≤–∏—è —Å –∫–Ω–æ–ø–æ—á–Ω—ã–º –º–µ–Ω—é
    bot.send_message(message.chat.id, greeting, reply_markup=markup)


# –í—ã–±–æ—Ä —Å—Ç—Ä–∞–Ω—ã –¥–ª—è —Ä–∞—Å—á—ë—Ç–∞
@bot.message_handler(func=lambda message: message.text in ["–†–∞—Å—á—ë—Ç", "–ò–∑–º–µ–Ω–∏—Ç—å —Å—Ç—Ä–∞–Ω—É"])
def handle_calculation(message):
    show_country_selection(message.chat.id)


# –†–∞—Å—á—ë—Ç –ø–æ —Å—Å—ã–ª–∫–µ —Å encar
@bot.message_handler(func=lambda message: message.text.startswith("http"))
def process_encar_link(message):
    # –ü—Ä–æ–≤–µ—Ä—è–µ–º, –≤—ã–±—Ä–∞–Ω–∞ –ª–∏ —Å—Ç—Ä–∞–Ω–∞
    if message.chat.id not in user_data or "country" not in user_data[message.chat.id]:
        bot.send_message(
            message.chat.id,
            "–ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –≤—ã–±–µ—Ä–∏—Ç–µ —Å—Ç—Ä–∞–Ω—É –∏–∑ –º–µ–Ω—é –ø–µ—Ä–µ–¥ –æ—Ç–ø—Ä–∞–≤–∫–æ–π —Å—Å—ã–ª–∫–∏ –Ω–∞ –∞–≤—Ç–æ–º–æ–±–∏–ª—å.",
        )
        return

    # –ü—Ä–æ–≤–µ—Ä—è–µ–º, —á—Ç–æ —Å—Å—ã–ª–∫–∞ —Å–æ–¥–µ—Ä–∂–∏—Ç encar.com –∏–ª–∏ fem.encar.com
    if "encar.com" not in message.text or "fem.encar.com" not in message.text:
        bot.send_message(
            message.chat.id,
            "üö´ –í–≤–µ–¥–∏—Ç–µ –∫–æ—Ä—Ä–µ–∫—Ç–Ω—É—é —Å—Å—ã–ª–∫—É —Å encar.com",
        )
        return

    # –ü–æ–ª—É—á–∞–µ–º –≤—ã–±—Ä–∞–Ω–Ω—É—é —Å—Ç—Ä–∞–Ω—É
    country = user_data[message.chat.id]["country"]

    # –û—Ç–ø—Ä–∞–≤–ª—è–µ–º —Å–æ–æ–±—â–µ–Ω–∏–µ –æ –Ω–∞—á–∞–ª–µ –æ–±—Ä–∞–±–æ—Ç–∫–∏
    processing_message = bot.send_message(message.chat.id, "‚è≥ –û–±—Ä–∞–±–æ—Ç–∫–∞ –¥–∞–Ω–Ω—ã—Ö...")

    # –ü—ã—Ç–∞–µ–º—Å—è —Ä–∞—Å—Å—á–∏—Ç–∞—Ç—å —Å—Ç–æ–∏–º–æ—Å—Ç—å
    try:
        calculate_cost(country, message)
    except Exception as e:
        bot.send_message(
            message.chat.id,
            "üö´ –ü—Ä–æ–∏–∑–æ—à–ª–∞ –æ—à–∏–±–∫–∞ –ø—Ä–∏ —Ä–∞—Å—á—ë—Ç–µ. –ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –ø–æ–ø—Ä–æ–±—É–π—Ç–µ —Å–Ω–æ–≤–∞.",
        )
        print(f"–û—à–∏–±–∫–∞ –ø—Ä–∏ —Ä–∞—Å—á—ë—Ç–µ: {e}")
    finally:
        # –£–¥–∞–ª—è–µ–º —Å–æ–æ–±—â–µ–Ω–∏–µ –æ –ø—Ä–æ—Ü–µ—Å—Å–µ
        bot.delete_message(message.chat.id, processing_message.message_id)


@bot.message_handler(func=lambda message: message.text == "–ü–æ —Å—Å—ã–ª–∫–µ —Å encar")
def handle_link_input(message):
    bot.send_message(
        message.chat.id,
        "–û—Ç–ø—Ä–∞–≤—å—Ç–µ —Å—Å—ã–ª–∫—É –Ω–∞ –∞–≤—Ç–æ–º–æ–±–∏–ª—å —Å —Å–∞–π—Ç–∞ encar.com –∏–ª–∏ –º–æ–±–∏–ª—å–Ω–æ–≥–æ –ø—Ä–∏–ª–æ–∂–µ–Ω–∏—è Encar.",
    )


# –†—É—á–Ω–æ–π —Ä–∞—Å—á—ë—Ç
@bot.message_handler(func=lambda message: message.text == "–†—É—á–Ω–æ–π –≤–≤–æ–¥")
def handle_manual_input(message):
    user_data[message.chat.id] = {"step": "year"}
    bot.send_message(
        message.chat.id,
        "üìÖ –£–∫–∞–∂–∏—Ç–µ –≥–æ–¥ –≤—ã–ø—É—Å–∫–∞ –∞–≤—Ç–æ–º–æ–±–∏–ª—è (–Ω–∞–ø—Ä–∏–º–µ—Ä: 2022):",
    )


@bot.message_handler(
    func=lambda message: message.chat.id in user_data
    and "step" in user_data[message.chat.id]
)
def process_manual_input(message):
    global current_country, current_car_type

    user_id = message.chat.id

    # –ü—Ä–æ–≤–µ—Ä–∫–∞, –µ—Å–ª–∏ —à–∞–≥ - –≤—ã–±–æ—Ä —Ç–∏–ø–∞ –∫—É–∑–æ–≤–∞
    if user_data[user_id].get("step") == "car_type":
        if message.text.lower() in ["—Å–µ–¥–∞–Ω", "–∫—Ä–æ—Å—Å–æ–≤–µ—Ä"]:
            current_car_type = (
                "sedan" if message.text.lower() == "—Å–µ–¥–∞–Ω" else "crossover"
            )
            user_data[user_id]["step"] = None

            # –ü–æ–ª—É—á–∞–µ–º –¥–∞–Ω–Ω—ã–µ –¥–ª—è —Ä–∞—Å—á—ë—Ç–∞
            year = user_data[user_id]["year"]
            month = user_data[user_id]["month"]
            engine_volume = user_data[user_id]["engine_volume"]
            price = user_data[user_id]["price"]

            # –í—ã–ø–æ–ª–Ω—è–µ–º —Ä–∞—Å—á—ë—Ç —Å—Ç–æ–∏–º–æ—Å—Ç–∏
            calculate_manual_cost(
                message,
                year,
                month,
                engine_volume,
                price,
                current_country,
                current_car_type,
            )
        else:
            bot.send_message(
                user_id,
                "üö´ –ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –≤—ã–±–µ—Ä–∏—Ç–µ –∫–æ—Ä—Ä–µ–∫—Ç–Ω—ã–π —Ç–∏–ø –∫—É–∑–æ–≤–∞: –°–µ–¥–∞–Ω –∏–ª–∏ –ö—Ä–æ—Å—Å–æ–≤–µ—Ä.",
            )
        return

    # –î–∞–ª–µ–µ –ª–æ–≥–∏–∫–∞ –æ–±—Ä–∞–±–æ—Ç–∫–∏ –æ—Å—Ç–∞–ª—å–Ω—ã—Ö —à–∞–≥–æ–≤
    step = user_data[user_id].get("step")

    if step == "year":
        if message.text.isdigit() and 1900 <= int(message.text) <= 2025:
            user_data[user_id]["year"] = int(message.text)
            user_data[user_id]["step"] = "month"
            bot.send_message(
                user_id,
                "üìÖ –£–∫–∞–∂–∏—Ç–µ –º–µ—Å—è—Ü –≤—ã–ø—É—Å–∫–∞ –∞–≤—Ç–æ–º–æ–±–∏–ª—è (–Ω–∞–ø—Ä–∏–º–µ—Ä: 8 –¥–ª—è –∞–≤–≥—É—Å—Ç–∞):",
            )
        else:
            bot.send_message(
                user_id,
                "üö´ –ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –≤–≤–µ–¥–∏—Ç–µ –∫–æ—Ä—Ä–µ–∫—Ç–Ω—ã–π –≥–æ–¥ (–Ω–∞–ø—Ä–∏–º–µ—Ä: 2022).",
            )

    elif step == "month":
        try:
            month = int(message.text)
            if 1 <= month <= 12:
                user_data[user_id]["month"] = month
                user_data[user_id]["step"] = "engine_volume"
                bot.send_message(
                    user_id,
                    "üîß –£–∫–∞–∂–∏—Ç–µ –æ–±—ä—ë–º –¥–≤–∏–≥–∞—Ç–µ–ª—è –≤ –∫—É–±. —Å–º (–Ω–∞–ø—Ä–∏–º–µ—Ä: 2497):",
                )
            else:
                bot.send_message(
                    user_id,
                    "üö´ –ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –≤–≤–µ–¥–∏—Ç–µ –∫–æ—Ä—Ä–µ–∫—Ç–Ω—ã–π –º–µ—Å—è—Ü (–æ—Ç 1 –¥–æ 12).",
                )
        except ValueError:
            bot.send_message(
                user_id,
                "üö´ –ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –≤–≤–µ–¥–∏—Ç–µ –∫–æ—Ä—Ä–µ–∫—Ç–Ω—ã–π –º–µ—Å—è—Ü (–æ—Ç 1 –¥–æ 12).",
            )

    elif step == "engine_volume":
        if message.text.isdigit() and int(message.text) > 0:
            user_data[user_id]["engine_volume"] = int(message.text)
            user_data[user_id]["step"] = "price"
            bot.send_message(
                user_id,
                "üí∞ –£–∫–∞–∂–∏—Ç–µ —Ü–µ–Ω—É –∞–≤—Ç–æ–º–æ–±–∏–ª—è –≤ –ö–æ—Ä–µ–µ (–≤ –≤–æ–Ω–∞—Ö) (–Ω–∞–ø—Ä–∏–º–µ—Ä: 25000000):",
            )
        else:
            bot.send_message(
                user_id,
                "üö´ –ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –≤–≤–µ–¥–∏—Ç–µ –∫–æ—Ä—Ä–µ–∫—Ç–Ω—ã–π –æ–±—ä—ë–º –¥–≤–∏–≥–∞—Ç–µ–ª—è (–Ω–∞–ø—Ä–∏–º–µ—Ä: 2497).",
            )

    elif step == "price":
        if message.text.isdigit() and int(message.text) > 0:
            user_data[user_id]["price"] = int(message.text)

            # –ï—Å–ª–∏ —Å—Ç—Ä–∞–Ω–∞ ‚Äî –ö—ã—Ä–≥—ã–∑—Å—Ç–∞–Ω, –∑–∞–ø—Ä–∞—à–∏–≤–∞–µ–º —Ç–∏–ø –∫—É–∑–æ–≤–∞
            if current_country == "Kyrgyzstan":
                user_data[user_id]["step"] = "car_type"

                # –°–æ–∑–¥–∞–µ–º –∫–ª–∞–≤–∏–∞—Ç—É—Ä—É —Å –∫–Ω–æ–ø–∫–∞–º–∏ –¥–ª—è –≤—ã–±–æ—Ä–∞ —Ç–∏–ø–∞ –∫—É–∑–æ–≤–∞
                keyboard = types.ReplyKeyboardMarkup(
                    resize_keyboard=True, one_time_keyboard=True
                )
                keyboard.add("–°–µ–¥–∞–Ω", "–ö—Ä–æ—Å—Å–æ–≤–µ—Ä")

                bot.send_message(
                    user_id,
                    "–ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –≤—ã–±–µ—Ä–∏—Ç–µ —Ç–∏–ø –∫—É–∑–æ–≤–∞ –∞–≤—Ç–æ–º–æ–±–∏–ª—è:",
                    reply_markup=keyboard,
                )
            else:
                user_data[user_id]["step"] = None
                year = user_data[user_id]["year"]
                month = user_data[user_id]["month"]
                engine_volume = user_data[user_id]["engine_volume"]
                price = user_data[user_id]["price"]
                calculate_manual_cost(
                    message, year, month, engine_volume, price, current_country
                )
        else:
            bot.send_message(
                user_id,
                "üö´ –ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –≤–≤–µ–¥–∏—Ç–µ –∫–æ—Ä—Ä–µ–∫—Ç–Ω—É—é —Ü–µ–Ω—É (–Ω–∞–ø—Ä–∏–º–µ—Ä: 25000000).",
            )


# –û–±—Ä–∞–±–æ—Ç–∫–∞ –≤—ã–±–æ—Ä–∞ —Ç–∏–ø–∞ –∫—É–∑–æ–≤–∞
def handle_car_type_selection(call):
    global current_car_type, current_country

    user_id = call.message.chat.id

    # –°–æ—Ö—Ä–∞–Ω—è–µ–º –≤—ã–±—Ä–∞–Ω–Ω—ã–π —Ç–∏–ø –∫—É–∑–æ–≤–∞
    current_car_type = call.data
    user_data[user_id]["step"] = None

    # –ü–æ–ª—É—á–∞–µ–º –¥–∞–Ω–Ω—ã–µ –¥–ª—è —Ä–∞—Å—á—ë—Ç–∞
    year = user_data[user_id]["year"]
    month = user_data[user_id]["month"]
    engine_volume = user_data[user_id]["engine_volume"]
    price = user_data[user_id]["price"]

    # –í—ã–ø–æ–ª–Ω—è–µ–º —Ä–∞—Å—á—ë—Ç —Å—Ç–æ–∏–º–æ—Å—Ç–∏
    calculate_manual_cost(
        call.message,
        year,
        month,
        engine_volume,
        price,
        current_country,
        current_car_type,
    )


def calculate_manual_cost(
    message, year, month, engine_volume, price, country, car_type=None
):
    global current_car_type, current_country

    try:
        # –í—ã–∑—ã–≤–∞–µ–º —Ñ—É–Ω–∫—Ü–∏—é —Ä–∞—Å—á—ë—Ç–∞ —Å—Ç–æ–∏–º–æ—Å—Ç–∏ –∏–∑ calculator.py
        result_message = calculate_cost_manual(
            country, year, month, engine_volume, price, car_type
        )

        # –°–æ–∑–¥–∞—ë–º –∫–ª–∞–≤–∏–∞—Ç—É—Ä—É —Å –∫–Ω–æ–ø–∫–∞–º–∏
        keyboard = types.InlineKeyboardMarkup()
        keyboard.add(
            types.InlineKeyboardButton(
                "–†–∞—Å—Å—á–∏—Ç–∞—Ç—å —Å—Ç–æ–∏–º–æ—Å—Ç—å –¥—Ä—É–≥–æ–≥–æ –∞–≤—Ç–æ–º–æ–±–∏–ª—è",
                callback_data="calculate_another",
            )
        )
        keyboard.add(
            types.InlineKeyboardButton(
                "–í–µ—Ä–Ω—É—Ç—å—Å—è –≤ –≥–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é", callback_data="main_menu"
            )
        )

        # –û—Ç–ø—Ä–∞–≤–ª—è–µ–º —Å–æ–æ–±—â–µ–Ω–∏–µ —Å —Ä–µ–∑—É–ª—å—Ç–∞—Ç–æ–º –∏ –∫–ª–∞–≤–∏–∞—Ç—É—Ä–æ–π
        bot.send_message(
            message.chat.id, result_message, parse_mode="HTML", reply_markup=keyboard
        )

        # –°–±—Ä–∞—Å—ã–≤–∞–µ–º –¥–∞–Ω–Ω—ã–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
        user_id = message.chat.id
        user_data[user_id] = {}
        current_country = None
        current_car_type = None

    except Exception as e:
        bot.send_message(
            message.chat.id,
            "üö´ –ü—Ä–æ–∏–∑–æ—à–ª–∞ –æ—à–∏–±–∫–∞ –ø—Ä–∏ —Ä–∞—Å—á—ë—Ç–µ. –ü–æ–ø—Ä–æ–±—É–π—Ç–µ —Å–Ω–æ–≤–∞.",
        )
        print(f"–û—à–∏–±–∫–∞ –ø—Ä–∏ —Ä–∞—Å—á—ë—Ç–µ: {e}")


def show_calculation_options(chat_id):
    markup = types.ReplyKeyboardMarkup(resize_keyboard=True)
    btn_link = types.KeyboardButton("–ü–æ —Å—Å—ã–ª–∫–µ —Å encar")
    btn_manual = types.KeyboardButton("–†—É—á–Ω–æ–π –≤–≤–æ–¥")
    btn_main_menu = types.KeyboardButton("–í–µ—Ä–Ω—É—Ç—å—Å—è –≤ –≥–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é")
    markup.add(btn_link, btn_manual, btn_main_menu)

    bot.send_message(chat_id, "–í—ã–±–µ—Ä–∏—Ç–µ —Å–ø–æ—Å–æ–± —Ä–∞—Å—á—ë—Ç–∞:", reply_markup=markup)


###############
# –†–û–°–°–ò–Ø –ù–ê–ß–ê–õ–û
###############
@bot.message_handler(func=lambda message: message.text == "üá∑üá∫ –†–æ—Å—Å–∏—è")
def handle_russia(message):
    global current_country

    current_country = "Russia"
    user_data[message.chat.id] = {"country": "Russia"}
    print(f"–°–æ—Ö—Ä–∞–Ω–µ–Ω–∞ —Å—Ç—Ä–∞–Ω–∞: {user_data[message.chat.id]['country']}")  # –õ–æ–≥–∏—Ä–æ–≤–∞–Ω–∏–µ
    show_calculation_options(message.chat.id)


###############
# –†–û–°–°–ò–Ø –ö–û–ù–ï–¶
###############


##############
# –ö–ê–ó–ê–•–°–¢–ê–ù –ù–ê–ß–ê–õ–û
##############
@bot.message_handler(func=lambda message: message.text == "üá∞üáø –ö–∞–∑–∞—Ö—Å—Ç–∞–Ω")
def handle_kazakhstan(message):
    global current_country
    current_country = "Kazakhstan"
    user_data[message.chat.id] = {"country": "Kazakhstan"}
    print(f"–°–æ—Ö—Ä–∞–Ω–µ–Ω–∞ —Å—Ç—Ä–∞–Ω–∞: {user_data[message.chat.id]['country']}")  # –õ–æ–≥–∏—Ä–æ–≤–∞–Ω–∏–µ
    show_calculation_options(message.chat.id)


##############
# –ö–ê–ó–ê–•–°–¢–ê–ù –ö–û–ù–ï–¶
##############


##############
# –ö–´–†–ì–´–ó–°–¢–ê–ù –ù–ê–ß–ê–õ–û
##############
@bot.message_handler(func=lambda message: message.text == "üá∞üá¨ –ö—ã—Ä–≥—ã–∑—Å—Ç–∞–Ω")
def handle_kyrgyzstan(message):
    global current_country

    current_country = "Kyrgyzstan"
    user_data[message.chat.id] = {"country": "Kyrgyzstan"}
    print(f"–°–æ—Ö—Ä–∞–Ω–µ–Ω–∞ —Å—Ç—Ä–∞–Ω–∞: {user_data[message.chat.id]['country']}")  # –õ–æ–≥–∏—Ä–æ–≤–∞–Ω–∏–µ
    show_calculation_options(message.chat.id)


##############
# –ö–´–†–ì–´–ó–°–¢–ê–ù –ö–û–ù–ï–¶
##############


# –û–±—Ä–∞–±–æ—Ç—á–∏–∫–∏ –¥–ª—è –¥—Ä—É–≥–∏—Ö –∫–Ω–æ–ø–æ–∫
@bot.message_handler(func=lambda message: message.text == "Instagram")
def handle_instagram(message):
    bot.send_message(
        message.chat.id,
        "–ù–∞—à Instagram: https://www.instagram.com/auto_korea_cheongju",
    )


@bot.message_handler(func=lambda message: message.text == "WhatsApp")
def handle_whatsapp(message):
    ramis_whatsapp = "+82 10-8029-6232"
    artyom_whatsapp = "+82 10-8282-8062"

    # –§–æ—Ä–º–∏—Ä–æ–≤–∞–Ω–∏–µ —Å—Å—ã–ª–∫–∏ –¥–ª—è WhatsApp:
    # –£–±–∏—Ä–∞–µ–º —Å–∏–º–≤–æ–ª "+", –ø—Ä–æ–±–µ–ª—ã –∏ —Ç–∏—Ä–µ, —á—Ç–æ–±—ã –ø–æ–ª—É—á–∏—Ç—å –∫–æ—Ä—Ä–µ–∫—Ç–Ω—ã–π —Ñ–æ—Ä–º–∞—Ç –Ω–æ–º–µ—Ä–∞ –¥–ª—è —Å—Å—ã–ª–∫–∏.
    ramis_link = "https://wa.me/" + ramis_whatsapp.replace("+", "").replace(
        " ", ""
    ).replace("-", "")
    artyom_link = "https://wa.me/" + artyom_whatsapp.replace("+", "").replace(
        " ", ""
    ).replace("-", "")

    result_message = (
        f"–ê—Ä—Ç—ë–º: {artyom_whatsapp} {artyom_link}\n"
        f"–†–∞–º–∏—Å: {ramis_whatsapp} {ramis_link}"
    )

    bot.send_message(message.chat.id, result_message)


@bot.message_handler(func=lambda message: message.text == "Telegram-–∫–∞–Ω–∞–ª")
def handle_telegram_channel(message):
    bot.send_message(
        message.chat.id,
        "–ù–∞—à Telegram-–∫–∞–Ω–∞–ª: https://t.me/avtokoreaRF",
    )


@bot.message_handler(func=lambda message: message.text == "–ö–æ–Ω—Ç–∞–∫—Ç—ã")
def handle_manager(message):
    output_message = (
        f"+82 10-8282-8062 - –ê—Ä—Ç—ë–º (–ö–æ—Ä–µ—è)\n+82 10-8029-6232 - –†–∞–º–∏—Å (–ö–æ—Ä–µ—è)"
    )

    bot.send_message(message.chat.id, output_message)


def run_in_thread(target):
    """–ó–∞–ø—É—Å–∫ —Ñ—É–Ω–∫—Ü–∏–∏ –≤ –æ—Ç–¥–µ–ª—å–Ω–æ–º –ø–æ—Ç–æ–∫–µ"""
    thread = threading.Thread(target=target)
    thread.daemon = True
    thread.start()


if __name__ == "__main__":
    # –ó–∞–ø—É—Å–∫ –¥–ª–∏—Ç–µ–ª—å–Ω—ã—Ö –∑–∞–¥–∞—á –≤ –æ—Ç–¥–µ–ª—å–Ω—ã—Ö –ø–æ—Ç–æ–∫–∞—Ö
    run_in_thread(set_bot_commands)
    run_in_thread(get_nbkr_currency_rates)
    run_in_thread(get_nbk_currency_rates)
    run_in_thread(get_currency_rates)
    # –û—Å–Ω–æ–≤–Ω–æ–π –ø–æ—Ç–æ–∫ –≤—ã–ø–æ–ª–Ω—è–µ—Ç –±–æ—Ç
    bot.polling(none_stop=True)
